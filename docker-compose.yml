services:
  nginx:
    image: nginx:alpine
    container_name: ment-creator-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./backend/audio_files:/app/audio_files
    depends_on:
      - frontend
      - backend
    networks:
      - ment-creator-network

  frontend:
    build:
      context: ./frontend/ment-gen
      dockerfile: Dockerfile
    container_name: ment-creator-frontend
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_BASE_URL=/api/v1
    depends_on:
      - backend
    networks:
      - ment-creator-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ment-creator-backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - SECRET_KEY=${SECRET_KEY}
      - FISH_SPEECH_API_URL=http://fish-speech-tts:8080
      - PROJECT_NAME=${PROJECT_NAME:-ARS TTS System}
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER:-admin@example.com}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD:-changethis}
    volumes:
      - ./backend/audio_files:/app/audio_files
      - ./backend/voice_samples:/app/voice_samples
      - ./backend/voice_models:/app/voice_models
      - ./backend/temp_processing:/app/temp_processing
    depends_on:
      - db
      - fish-speech-tts
    networks:
      - ment-creator-network

  fish-speech-tts:
    image: ${IMAGE_NAME}
    container_name: ${CONTAINER_NAME}
    restart: unless-stopped
    environment:
      - NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES}
      - FISH_SPEECH_DEVICE=${FISH_SPEECH_DEVICE}
      - FISH_SPEECH_MODEL_PATH=${FISH_SPEECH_MODEL_PATH}
      - PYTHONPATH=${PYTHONPATH}
      - PYTHONUNBUFFERED=${PYTHONUNBUFFERED}
      - TORCH_HOME=${TORCH_HOME}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - ./backend/voice_samples:/workspace/voice_samples
      - ./backend/audio_files:/workspace/audio_files
      - ./backend/temp_processing:/workspace/temp_processing
      - ./fish-speech/checkpoints:/opt/fish-speech/checkpoints
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ment-creator-network

  db:
    image: postgres:17
    container_name: ment-creator-db
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    networks:
      - ment-creator-network
volumes:
  app-db-data:

networks:
  ment-creator-network:
    driver: bridge
