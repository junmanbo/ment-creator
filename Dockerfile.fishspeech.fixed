# Fish Speech TTS API 서버를 위한 GPU 버전 Dockerfile (수정된 버전)
FROM pytorch/pytorch:2.4.0-cuda12.1-cudnn9-devel

# 시스템 패키지 설치 (오디오 관련 라이브러리 포함)
RUN apt-get update && apt-get install -y \
    git \
    wget \
    build-essential \
    libsndfile1 \
    libsndfile1-dev \
    ffmpeg \
    portaudio19-dev \
    libasound2-dev \
    libportaudio2 \
    libpulse-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# 작업 디렉토리 설정
WORKDIR /app

# Fish Speech 저장소 클론
RUN git clone https://github.com/fishaudio/fish-speech.git /app/fish-speech

# Fish Speech 디렉토리로 이동
WORKDIR /app/fish-speech

# Python 기본 패키지 설치
RUN pip install --upgrade pip setuptools wheel

# PyTorch GPU 버전 설치
RUN pip install torch==2.4.1 torchvision==0.19.1 torchaudio==2.4.1 --index-url https://download.pytorch.org/whl/cu121

# 필수 의존성 먼저 설치
RUN pip install pyrootutils>=1.0.4 fastapi uvicorn httpx librosa soundfile numpy

# Fish Speech 핵심 의존성 수동 설치
RUN pip install \
    accelerate \
    datasets \
    einops \
    fire \
    hydra-core \
    lightning \
    omegaconf \
    rich \
    tensorboard \
    transformers>=4.0.0 \
    gradio \
    wandb \
    loguru \
    natsort \
    tensorboardX \
    matplotlib \
    click \
    tqdm

# pyaudio 수동 설치 시도 (실패해도 계속 진행)
RUN pip install pyaudio || echo "pyaudio 설치 실패 - 계속 진행"

# Fish Speech 소스 설치
RUN pip install -e . && echo "Fish Speech 소스 설치 성공" || echo "Fish Speech 소스 설치 실패"

# 설치 상태 확인
RUN python -c "import fish_speech; print('Fish Speech 모듈 로드 성공')" || echo "Fish Speech 모듈 로드 실패"

# 디렉토리 구조 확인
RUN find /app/fish-speech -name "*.py" | grep -E "(api|webui)" | head -10 || echo "API 관련 파일 찾기 실패"

# S1 모델 다운로드
RUN mkdir -p checkpoints
RUN wget -O checkpoints/fish-speech-1.4-s1.pth \
    https://huggingface.co/fishaudio/fish-speech-1.4/resolve/main/fish-speech-1.4-s1.pth || \
    echo "모델 다운로드 실패 - 런타임에 자동 다운로드됨"

# 포트 노출
EXPOSE 8765

# 환경변수 설정
ENV PYTHONPATH=/app/fish-speech
ENV CUDA_VISIBLE_DEVICES=0

# Fish Speech API 서버 시작 스크립트 생성 (문법 오류 수정)
RUN echo '#!/bin/bash\n\
cd /app/fish-speech\n\
echo "🐟 Fish Speech API 서버 시작 중..."\n\
\n\
# Fish Speech 설치 확인\n\
echo "📋 Fish Speech 설치 상태 확인..."\n\
python -c "import fish_speech; print(\"Fish Speech 버전:\", getattr(fish_speech, \"__version__\", \"unknown\"))" || echo "❌ Fish Speech 모듈 로드 실패"\n\
\n\
# 디렉토리 구조 확인\n\
echo "📁 API 관련 파일 찾기..."\n\
find . -name "*api*" -type f | head -5\n\
find . -name "*webui*" -type d | head -5\n\
\n\
# Python 모듈 구조 확인\n\
echo "📋 fish_speech 모듈 구조:"\n\
python -c "import fish_speech; import os; print([f for f in os.listdir(\"fish_speech\") if not f.startswith(\"__\")])" || echo "모듈 구조 확인 실패"\n\
\n\
# 여러 API 시작 방법 시도\n\
echo "🚀 API 서버 시작 시도..."\n\
\n\
# 방법 1: fish_speech.webui.launch 모듈\n\
if python -c "import fish_speech.webui.launch" 2>/dev/null; then\n\
    echo "✅ webui.launch 모듈 발견 - 방법 1 시도"\n\
    python -m fish_speech.webui.launch \\\n\
        --listen 0.0.0.0 \\\n\
        --port 8765 \\\n\
        --inbrowser False \\\n\
        --api\n\
# 방법 2: fish_speech.webui.api 모듈\n\
elif python -c "import fish_speech.webui.api" 2>/dev/null; then\n\
    echo "✅ webui.api 모듈 발견 - 방법 2 시도"\n\
    python -m fish_speech.webui.api \\\n\
        --listen 0.0.0.0:8765 \\\n\
        --llama-checkpoint-path checkpoints/fish-speech-1.4-s1.pth \\\n\
        --decoder-checkpoint-path checkpoints \\\n\
        --device cuda:0 \\\n\
        --compile \\\n\
        --max-length 4096\n\
# 방법 3: tools/webui.py\n\
elif [ -f "tools/webui.py" ]; then\n\
    echo "✅ tools/webui.py 발견 - 방법 3 시도"\n\
    python tools/webui.py \\\n\
        --listen 0.0.0.0 \\\n\
        --port 8765 \\\n\
        --inbrowser False \\\n\
        --api\n\
# 방법 4: tools/api.py\n\
elif [ -f "tools/api.py" ]; then\n\
    echo "✅ tools/api.py 발견 - 방법 4 시도"\n\
    python tools/api.py \\\n\
        --listen 0.0.0.0:8765 \\\n\
        --llama-checkpoint-path checkpoints/fish-speech-1.4-s1.pth \\\n\
        --decoder-checkpoint-path checkpoints \\\n\
        --device cuda:0\n\
# 방법 5: webui.py\n\
elif [ -f "webui.py" ]; then\n\
    echo "✅ webui.py 발견 - 방법 5 시도"\n\
    python webui.py \\\n\
        --listen 0.0.0.0 \\\n\
        --port 8765 \\\n\
        --inbrowser False \\\n\
        --api\n\
# 방법 6: 가능한 모든 파일 탐색\n\
else\n\
    echo "❌ 표준 API 시작 방법을 찾을 수 없음"\n\
    echo "📋 가능한 실행 파일들:"\n\
    find . -name "*.py" -path "*/webui*" -o -name "*.py" -path "*api*" | head -10\n\
    \n\
    echo "🔧 fish_speech 패키지에서 직접 API 모듈 찾기..."\n\
    python -c "\n\
import fish_speech\n\
import os\n\
import sys\n\
\n\
# fish_speech 패키지 경로 확인\n\
pkg_path = fish_speech.__path__[0]\n\
print(f\"Fish Speech 패키지 경로: {pkg_path}\")\n\
\n\
# webui 관련 모듈 찾기\n\
webui_path = os.path.join(pkg_path, \"webui\")\n\
if os.path.exists(webui_path):\n\
    print(f\"WebUI 모듈 경로: {webui_path}\")\n\
    print(\"WebUI 모듈 파일들:\")\n\
    for f in os.listdir(webui_path):\n\
        if f.endswith(\".py\") and not f.startswith(\"__\"):\n\
            print(f\"  - {f}\")\n\
else:\n\
    print(\"WebUI 모듈이 없습니다.\")\n\
\n\
# 가능한 실행 방법 시도\n\
try:\n\
    import fish_speech.webui\n\
    print(\"✅ fish_speech.webui 모듈 로드 성공\")\n\
    \n\
    # webui의 하위 모듈들 확인\n\
    webui_dir = os.path.dirname(fish_speech.webui.__file__)\n\
    for file in os.listdir(webui_dir):\n\
        if file.endswith(\".py\") and not file.startswith(\"__\"):\n\
            module_name = file[:-3]\n\
            try:\n\
                __import__(f\"fish_speech.webui.{module_name}\")\n\
                print(f\"  ✅ fish_speech.webui.{module_name} 로드 성공\")\n\
            except Exception as e:\n\
                print(f\"  ❌ fish_speech.webui.{module_name} 로드 실패: {e}\")\n\
                \n\
except Exception as e:\n\
    print(f\"❌ fish_speech.webui 모듈 로드 실패: {e}\")\n\
"\n\
    \n\
    echo "🔧 간단한 Fish Speech API 서버 실행..."\n\
    python -c "\n\
from fastapi import FastAPI, HTTPException\n\
from pydantic import BaseModel\n\
import uvicorn\n\
import sys\n\
import os\n\
\n\
# Fish Speech 모듈 경로 추가\n\
sys.path.insert(0, \"/app/fish-speech\")\n\
\n\
app = FastAPI(title=\"Fish Speech API\", version=\"1.0.0\")\n\
\n\
class TTSRequest(BaseModel):\n\
    text: str\n\
    speaker: str = \"default\"\n\
    format: str = \"wav\"\n\
\n\
@app.get(\"/health\")\n\
def health():\n\
    return {\"status\": \"ok\", \"service\": \"fish-speech\", \"version\": \"1.4\"}\n\
\n\
@app.get(\"/\")\n\
def root():\n\
    return {\n\
        \"message\": \"Fish Speech API Server\", \n\
        \"status\": \"running\",\n\
        \"endpoints\": [\"/health\", \"/tts\", \"/voices\"]\n\
    }\n\
\n\
@app.post(\"/tts\")\n\
def text_to_speech(request: TTSRequest):\n\
    \"\"\"TTS 엔드포인트 - 현재는 Mock 응답\"\"\"\n\
    try:\n\
        # Fish Speech 모듈 로드 시도\n\
        import fish_speech\n\
        return {\n\
            \"status\": \"success\",\n\
            \"message\": \"TTS 요청 접수됨 (Fish Speech 모듈 로드 성공)\",\n\
            \"text\": request.text,\n\
            \"speaker\": request.speaker,\n\
            \"format\": request.format,\n\
            \"audio_url\": \"/audio/generated/sample.wav\"\n\
        }\n\
    except Exception as e:\n\
        return {\n\
            \"status\": \"error\",\n\
            \"message\": f\"Fish Speech 모듈 로드 실패: {str(e)}\",\n\
            \"text\": request.text,\n\
            \"fallback\": True\n\
        }\n\
\n\
@app.get(\"/voices\")\n\
def list_voices():\n\
    \"\"\"사용 가능한 음성 목록\"\"\"\n\
    return {\n\
        \"voices\": [\n\
            {\"id\": \"default\", \"name\": \"Default\", \"language\": \"ko\"},\n\
            {\"id\": \"female_1\", \"name\": \"Female Voice 1\", \"language\": \"ko\"},\n\
            {\"id\": \"male_1\", \"name\": \"Male Voice 1\", \"language\": \"ko\"}\n\
        ]\n\
    }\n\
\n\
if __name__ == \"__main__\":\n\
    print(\"🚀 Fish Speech API 서버 시작...\")\n\
    uvicorn.run(app, host=\"0.0.0.0\", port=8765, log_level=\"info\")\n\
"\n\
fi\n\
' > /app/start_server.sh

RUN chmod +x /app/start_server.sh

# 헬스체크 추가
HEALTHCHECK --interval=30s --timeout=10s --start-period=180s --retries=3 \
    CMD curl -f http://localhost:8765/health || curl -f http://localhost:8765/ || exit 1

# 기본 실행 명령
CMD ["/app/start_server.sh"]
