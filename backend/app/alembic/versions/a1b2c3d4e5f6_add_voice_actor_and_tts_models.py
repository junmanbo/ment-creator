"""Add voice actor and TTS models

Revision ID: a1b2c3d4e5f6
Revises: 897c6edf51f9
Create Date: 2025-06-02 21:59:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a1b2c3d4e5f6'
down_revision: Union[str, None] = '897c6edf51f9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create voice actor table
    op.create_table('voiceactor',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
        sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'NEUTRAL', name='gendertype'), nullable=False),
        sa.Column('age_range', sa.Enum('CHILD', 'TWENTIES', 'THIRTIES', 'FORTIES', 'FIFTIES', 'SENIOR', name='agerangetype'), nullable=False),
        sa.Column('language', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
        sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('characteristics', sa.JSON(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('sample_audio_path', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
        sa.Column('created_by', sa.Uuid(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_voiceactor_name'), 'voiceactor', ['name'], unique=False)
    
    # Create voice model table
    op.create_table('voicemodel',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('model_name', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
        sa.Column('model_version', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
        sa.Column('training_data_duration', sa.Integer(), nullable=True),
        sa.Column('quality_score', sa.Float(), nullable=True),
        sa.Column('status', sa.Enum('TRAINING', 'READY', 'ERROR', 'DEPRECATED', name='modelstatus'), nullable=False),
        sa.Column('config', sa.JSON(), nullable=True),
        sa.Column('voice_actor_id', sa.Uuid(), nullable=False),
        sa.Column('model_path', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['voice_actor_id'], ['voiceactor.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    
    # Create voice sample table
    op.create_table('voicesample',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('text_content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('duration', sa.Float(), nullable=True),
        sa.Column('sample_rate', sa.Integer(), nullable=False),
        sa.Column('file_size', sa.Integer(), nullable=True),
        sa.Column('voice_actor_id', sa.Uuid(), nullable=False),
        sa.Column('audio_file_path', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
        sa.Column('uploaded_by', sa.Uuid(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['uploaded_by'], ['user.id'], ),
        sa.ForeignKeyConstraint(['voice_actor_id'], ['voiceactor.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    
    # Create TTS script table
    op.create_table('ttsscript',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('text_content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('voice_settings', sa.JSON(), nullable=True),
        sa.Column('voice_actor_id', sa.Uuid(), nullable=True),
        sa.Column('created_by', sa.Uuid(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
        sa.ForeignKeyConstraint(['voice_actor_id'], ['voiceactor.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    
    # Create TTS generation table
    op.create_table('ttsgeneration',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('generation_params', sa.JSON(), nullable=True),
        sa.Column('script_id', sa.Uuid(), nullable=False),
        sa.Column('voice_model_id', sa.Uuid(), nullable=True),
        sa.Column('audio_file_path', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
        sa.Column('file_size', sa.Integer(), nullable=True),
        sa.Column('duration', sa.Float(), nullable=True),
        sa.Column('quality_score', sa.Float(), nullable=True),
        sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED', name='generationstatus'), nullable=False),
        sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('requested_by', sa.Uuid(), nullable=False),
        sa.Column('started_at', sa.DateTime(), nullable=True),
        sa.Column('completed_at', sa.DateTime(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['requested_by'], ['user.id'], ),
        sa.ForeignKeyConstraint(['script_id'], ['ttsscript.id'], ),
        sa.ForeignKeyConstraint(['voice_model_id'], ['voicemodel.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    
    # Create TTS library table
    op.create_table('ttslibrary',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
        sa.Column('text_content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('category', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
        sa.Column('tags', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
        sa.Column('is_public', sa.Boolean(), nullable=False),
        sa.Column('voice_actor_id', sa.Uuid(), nullable=True),
        sa.Column('audio_file_path', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
        sa.Column('usage_count', sa.Integer(), nullable=False),
        sa.Column('created_by', sa.Uuid(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
        sa.ForeignKeyConstraint(['voice_actor_id'], ['voiceactor.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ttslibrary')
    op.drop_table('ttsgeneration')
    op.drop_table('ttsscript')
    op.drop_table('voicesample')
    op.drop_table('voicemodel')
    op.drop_index(op.f('ix_voiceactor_name'), table_name='voiceactor')
    op.drop_table('voiceactor')
    
    # Drop enums
    op.execute('DROP TYPE IF EXISTS generationstatus')
    op.execute('DROP TYPE IF EXISTS modelstatus')
    op.execute('DROP TYPE IF EXISTS agerangetype')
    op.execute('DROP TYPE IF EXISTS gendertype')
    # ### end Alembic commands ###
