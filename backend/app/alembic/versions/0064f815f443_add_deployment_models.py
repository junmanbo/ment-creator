"""Add deployment models

Revision ID: 0064f815f443
Revises: ca1de7c09d1e
Create Date: 2025-06-06 08:44:52.940695

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0064f815f443'
down_revision: Union[str, None] = 'ca1de7c09d1e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('approvalrecord', sa.Column('deployment_id', sa.Uuid(), nullable=False))
    op.add_column('approvalrecord', sa.Column('step_name', sa.String(), nullable=False))
    op.add_column('approvalrecord', sa.Column('step_order', sa.Integer(), nullable=False))
    op.add_column('approvalrecord', sa.Column('required_role', sa.String(), nullable=False))
    op.add_column('approvalrecord', sa.Column('status', sa.String(), nullable=False))
    op.add_column('approvalrecord', sa.Column('approved_at', sa.DateTime(), nullable=True))
    op.add_column('approvalrecord', sa.Column('comments', sa.String(), nullable=True))
    op.alter_column('approvalrecord', 'approved_by',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_constraint(op.f('approvalrecord_deployment_approval_id_fkey'), 'approvalrecord', type_='foreignkey')
    op.create_foreign_key(None, 'approvalrecord', 'deployment', ['deployment_id'], ['id'])
    op.drop_column('approvalrecord', 'action')
    op.drop_column('approvalrecord', 'deployment_approval_id')
    op.drop_column('approvalrecord', 'comment')
    op.alter_column('deployment', 'error_message',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.drop_column('deployment', 'deployment_logs')
    op.add_column('deploymentapproval', sa.Column('required_role', sa.String(), nullable=False))
    op.add_column('deploymentapproval', sa.Column('is_required', sa.Boolean(), nullable=False))
    op.add_column('deploymentapproval', sa.Column('approved_by', sa.Uuid(), nullable=True))
    op.add_column('deploymentapproval', sa.Column('rejection_reason', sa.String(), nullable=True))
    op.create_foreign_key(None, 'deploymentapproval', 'user', ['approved_by'], ['id'])
    op.drop_column('deploymentapproval', 'is_rejected')
    op.drop_column('deploymentapproval', 'required_approvers')
    op.drop_column('deploymentapproval', 'current_approvals')
    op.drop_column('deploymentapproval', 'is_approved')
    op.add_column('deploymenthistory', sa.Column('description', sa.String(), nullable=True))
    op.add_column('deploymenthistory', sa.Column('performed_by', sa.Uuid(), nullable=False))
    op.add_column('deploymenthistory', sa.Column('performed_at', sa.DateTime(), nullable=False))
    op.create_foreign_key(None, 'deploymenthistory', 'user', ['performed_by'], ['id'])
    op.drop_column('deploymenthistory', 'created_at')
    op.drop_column('deploymenthistory', 'status')
    op.drop_column('deploymenthistory', 'message')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('deploymenthistory', sa.Column('message', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('deploymenthistory', sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.add_column('deploymenthistory', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'deploymenthistory', type_='foreignkey')
    op.drop_column('deploymenthistory', 'performed_at')
    op.drop_column('deploymenthistory', 'performed_by')
    op.drop_column('deploymenthistory', 'description')
    op.add_column('deploymentapproval', sa.Column('is_approved', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('deploymentapproval', sa.Column('current_approvals', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('deploymentapproval', sa.Column('required_approvers', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('deploymentapproval', sa.Column('is_rejected', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'deploymentapproval', type_='foreignkey')
    op.drop_column('deploymentapproval', 'rejection_reason')
    op.drop_column('deploymentapproval', 'approved_by')
    op.drop_column('deploymentapproval', 'is_required')
    op.drop_column('deploymentapproval', 'required_role')
    op.add_column('deployment', sa.Column('deployment_logs', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.alter_column('deployment', 'error_message',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.add_column('approvalrecord', sa.Column('comment', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('approvalrecord', sa.Column('deployment_approval_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('approvalrecord', sa.Column('action', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'approvalrecord', type_='foreignkey')
    op.create_foreign_key(op.f('approvalrecord_deployment_approval_id_fkey'), 'approvalrecord', 'deploymentapproval', ['deployment_approval_id'], ['id'])
    op.alter_column('approvalrecord', 'approved_by',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_column('approvalrecord', 'comments')
    op.drop_column('approvalrecord', 'approved_at')
    op.drop_column('approvalrecord', 'status')
    op.drop_column('approvalrecord', 'required_role')
    op.drop_column('approvalrecord', 'step_order')
    op.drop_column('approvalrecord', 'step_name')
    op.drop_column('approvalrecord', 'deployment_id')
    # ### end Alembic commands ###
